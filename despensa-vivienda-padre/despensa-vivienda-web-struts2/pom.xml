<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"> 
  <modelVersion>4.0.0</modelVersion> 
  <parent> 
    <groupId>org.icabanas.despensa</groupId> 
    <artifactId>despensa-vivienda-padre</artifactId> 
    <version>1.0-SNAPSHOT</version> 
  </parent> 
  <artifactId>despensa-vivienda-web-struts2</artifactId> 
  <packaging>war</packaging> 
  <name>despensa-vivienda-web-struts2</name>
  
  <properties>
  	<jetty.version>7.2.1.v20101111</jetty.version>
  	<web.port>8888</web.port>
  	<web.context>/despensa-web</web.context>
  	<web.host>http://localhost:${web.port}</web.host>
  	<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
  	<hibernate.showSQL>true</hibernate.showSQL>
  	<spring.framework.version>3.1.2.RELEASE</spring.framework.version>
  	<spring.mockframework.version>2.0.8</spring.mockframework.version>   	  	
  	<showSQL>true</showSQL>
  	<db.url>jdbc:hsqldb:file:${project.basedir}/target/db/build;shutdown=true</db.url>
  	<!-- <db.url>jdbc:hsqldb:mem:testdb;shutdown=true</db.url>-->
	<db.driverClassName>org.hsqldb.jdbcDriver</db.driverClassName>
	<db.username>sa</db.username>
	<db.password></db.password>  
	<db.ignoresCase>true</db.ignoresCase>     
	<sitemesh.version>2.4.2</sitemesh.version> 
  </properties>
  
  <build>
  	<resources>
  		<resource>
  			<directory>src/main/resources</directory>
  			<filtering>true</filtering>
  		</resource>
  	</resources>
  	<testResources>  		
  		<testResource>
  			<directory>src/test/resources</directory>
  			<filtering>true</filtering>
  		</testResource>
  	</testResources>
  	  
  	<plugins> 
      	<plugin> 
	        <groupId>org.apache.maven.plugins</groupId> 
	        <artifactId>maven-war-plugin</artifactId> 
	        <version>2.1.1</version> 
	        <configuration> 
	          <!-- web.xml is not mandatory since JavaEE 5 --> 
	          <failOnMissingWebXml>true</failOnMissingWebXml> 
	          <!-- 
	          <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors> 
	          <warSourceDirectory>WebContent</warSourceDirectory>         
	          <webResources> 
	            <resource> 
	              <directory>src/main/webapp2</directory> 
	              <filtering>true</filtering> 
	            </resource> 
	          </webResources> 
	          --> 
	        </configuration> 
      	</plugin> 
      
      	<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-surefire-plugin</artifactId>
 			<version>2.10</version>
 			<configuration>
 				<excludes>
 					<exclude>**/integracion/**/*IT.java</exclude>
 				</excludes>
 			</configuration>
 		</plugin>
  		
  		<plugin>
		  	<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>${jetty.version}</version>
			<configuration>
				<connectors>
					<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
						<port>${web.port}</port>
					</connector>
				</connectors>
			    <scanIntervalSeconds>10</scanIntervalSeconds>
				<reload>automatic</reload>
				<stopKey>foo</stopKey>
				<stopPort>9090</stopPort>
				<webAppConfig>
					<contextPath>${web.context}</contextPath>
					<sessionHandler implementation="org.eclipse.jetty.server.session.SessionHandler">
						<sessionManager implementation="org.eclipse.jetty.server.session.HashSessionManager">
							<storeDirectory>${basedir}/target/sessions</storeDirectory>
						</sessionManager>
					</sessionHandler>
				</webAppConfig>
				<!-- 
				<systemproperties>
					<systemproperty>
						<name>log4j.configuration</name>
						<value>file:${project.basedir}/target/classes/log4j.xml</value>
					</systemproperty>
				</systemproperties>
				 -->
				<scanTargetPatterns>
					<scanTargetPattern>                            
						<directory>src/main/webapp/WEB-INF</directory>
						<includes>
							<include>**/*</include>
						</includes>
					</scanTargetPattern>
					<scanTargetPattern>                            
						<directory>src/main/resources</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
					</scanTargetPattern>
					<scanTargetPattern>
						<directory>src/main/java</directory>
						<includes>
							<include>**/*.java</include>
						</includes>
					</scanTargetPattern>
					<!-- <scanTargetPattern>
						<directory>src/main/resources</directory>
						<includes>
							<include>**/*.xml</include>
						</includes>
					</scanTargetPattern> -->
				</scanTargetPatterns>
			</configuration>			
		</plugin>		  	
			
  	</plugins> 
  </build> 
    
    
  <dependencies>           
  		<!-- Test dependencies -->
  		<dependency> 
        	<groupId>javax.servlet</groupId> 
            <artifactId>jsp-api</artifactId> 
            <version>2.0</version> 
            <scope>test</scope> 
        </dependency>
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-mock</artifactId> 
            <version>${spring.mockframework.version}</version> 
            <scope>test</scope> 
            <exclusions>
            	<exclusion>
		          <groupId>log4j</groupId>
		          <artifactId>log4j</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>logkit</groupId>
		          <artifactId>logkit</artifactId>
		        </exclusion>
            </exclusions>
        </dependency>
        <dependency>
        	<groupId>org.dbunit</groupId> 
            <artifactId>dbunit</artifactId> 
            <version>2.4.5</version> 
            <scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>org.seleniumhq.selenium</groupId>
        	<artifactId>selenium</artifactId>
        	<version>2.0b1</version>
        	<scope>test</scope>
        	<exclusions>
        		<!-- Excluyo la dependencia testng ya que no lo uso para mis test e incluyÃ©ndola hace uso de JUnit 3.8 -->
        		<exclusion>
		          <groupId>org.testng</groupId>
		          <artifactId>testng</artifactId>
		        </exclusion>
        	</exclusions>
    	</dependency>        
         
          <!-- Spring dependencies -->           
          <dependency> 
                  <groupId>org.springframework</groupId> 
                  <artifactId>spring-orm</artifactId> 
                  <version>${spring.framework.version}</version> 
                  <scope>runtime</scope> 
          </dependency>   
          <dependency> 
                  <groupId>org.springframework</groupId> 
                  <artifactId>spring-tx</artifactId> 
                  <version>${spring.framework.version}</version> 
                  <scope>runtime</scope> 
          </dependency>                            
          
          <!-- Despensa dependencies -->    
          <dependency>
          	<groupId>org.icabanas</groupId>
          	<artifactId>icabanas-core-api</artifactId>
          	<version>0.0.1-SNAPSHOT</version>
          </dependency>      
           <dependency> 
                  <groupId>org.icabanas.despensa</groupId> 
                  <artifactId>despensa-vivienda-servicios</artifactId> 
                  <version>1.0-SNAPSHOT</version> 
                  <scope>compile</scope> 
                  <exclusions>
                  	<exclusion>
			          <groupId>org.icabanas.despensa</groupId>
			          <artifactId>despensa-vivienda-dao</artifactId>
			        </exclusion>
			        <exclusion>
			          <groupId>org.icabanas.despensa</groupId>
			          <artifactId>despensa-vivienda-modelo</artifactId>
			        </exclusion>
                  </exclusions>                 
          </dependency>
          <dependency> 
                  <groupId>org.icabanas.despensa</groupId> 
                  <artifactId>despensa-vivienda-dao</artifactId> 
                  <version>1.0-SNAPSHOT</version> 
                  <scope>compile</scope> 
          </dependency> 
          <dependency> 
                  <groupId>org.icabanas.despensa</groupId> 
                  <artifactId>despensa-vivienda-web</artifactId> 
                  <version>1.0-SNAPSHOT</version> 
                  <scope>compile</scope> 
          </dependency>          
          <dependency> 
                  <groupId>org.icabanas.despensa</groupId> 
                  <artifactId>despensa-vivienda-modelo</artifactId> 
                  <version>1.0-SNAPSHOT</version> 
                  <scope>runtime</scope> 
          </dependency>        
          
          <!-- Struts2 dependencies -->          
           <dependency> 
                  <groupId>org.apache.struts</groupId> 
                  <artifactId>struts2-core</artifactId> 
                  <version>2.3.4.1</version> 
                  <exclusions> 
                          <exclusion> 
                                  <artifactId>tools</artifactId> 
                                  <groupId>com.sun</groupId> 
                          </exclusion> 
                  </exclusions>           
          </dependency>          
          <dependency> 
                  <groupId>org.apache.struts</groupId> 
                  <artifactId>struts2-spring-plugin</artifactId> 
                  <version>2.3.4.1</version> 
          </dependency> 
           
          <!-- Hibernate dependencies -->  
          <dependency> 
                  <groupId>org.hibernate</groupId> 
                  <artifactId>hibernate-entitymanager</artifactId> 
                  <version>${hibernate.version}</version> 
                  <scope>runtime</scope>                   
          </dependency> 
          
          <!-- J2EE dependencies --> 
           <dependency> 
                  <groupId>javax.servlet</groupId> 
                  <artifactId>servlet-api</artifactId> 
                  <version>2.5</version> 
                  <scope>provided</scope> 
          </dependency>      
          <!--      
          <dependency>
          	<groupId>jstl</groupId>
          	<artifactId>jstl</artifactId>
          	<version>1.2</version>
          	<scope>runtime</scope>
          </dependency>
           -->
          <!-- Otras dependencias -->           
         <dependency> 
                  <groupId>aspectj</groupId> 
                  <artifactId>aspectjweaver</artifactId> 
                  <version>1.5.4</version> 
                  <scope>runtime</scope> 
          </dependency> 
          
          <dependency> 
                  <groupId>hsqldb</groupId> 
                  <artifactId>hsqldb</artifactId> 
                  <version>${hsqldb.version}</version> 
                  <scope>runtime</scope> 
          </dependency> 
          
          <!-- DisplayTag dependencias -->
          <dependency>
          	<groupId>displaytag</groupId>
          	<artifactId>displaytag</artifactId>
          	<version>1.2</version>
          	<scope>compile</scope>
          	<exclusions>
          		<exclusion>
		          <groupId>org.slf4j</groupId>
		          <artifactId>jcl104-over-slf4j</artifactId>
		        </exclusion>
		        <exclusion>
		          <groupId>org.slf4j</groupId>
		          <artifactId>slf4j-log4j12</artifactId>
		        </exclusion>		        
          	</exclusions>
          </dependency>       
          
          <!-- Struts2 Tiles plugin dependencia 
          <dependency>
          	<groupId></groupId>
          	<artifactId></artifactId>
          	<version></version>
          	<scope>runtime</scope>
          </dependency>
          -->
          
          <!-- Sitemesh dependencia -->
          <dependency>
          	<groupId>opensymphony</groupId>
          	<artifactId>sitemesh</artifactId>
          	<version>${sitemesh.version}</version>
          	<scope>runtime</scope>
          </dependency>   
  </dependencies> 
  
  <profiles>
  	<profile>
      <id>performance-test</id>
      <build>
      	<plugins>
      		<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>jmeter-tests</id>
						<phase>verify</phase>
						<goals>
							<goal>jmeter</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
      	</plugins>
      </build>
    </profile>
    
  	<profile>
      <id>continuous-integration-jetty-hsqldb</id>
      <build>
      	<plugins>
      	
      		<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-surefire-plugin</artifactId>
	  			<version>2.10</version>
	  			<executions>
	  				<execution>
	  					<id>EjecuciÃ³n Test de IntegraciÃ³n</id>
	  					<phase>integration-test</phase>
	  					<goals>
	  						<goal>test</goal>
	  					</goals>
	  					<configuration>
	  						<skip>false</skip>
					        <excludes>
					        	<exclude>none</exclude>
					        </excludes>
					        <includes>
					        	<include>**/integracion/**/*IT.java</include>
					        </includes>
	  					</configuration>
	  				</execution>
	  			</executions>
	  			<configuration>
	  				<excludes>
	  					<exclude>**/integracion/**/*IT.java</exclude>
	  				</excludes>
	  			</configuration>
	  		</plugin>
	  		
      		<plugin>
	  			<groupId>org.codehaus.mojo</groupId>
	  			<artifactId>hibernate3-maven-plugin</artifactId>
	  			<version>2.2</version>
	  			<executions>
	  				<execution>		
	  					<id>GeneraciÃ³n esquema ddl CREATE</id>		        	
			            <phase>pre-integration-test</phase>
			            <goals>
			              <goal>hbm2ddl</goal>
			            </goals>
			            <configuration>
			  				<components>
			  					<component>
			  						<name>hbm2ddl</name>
			  						<implementation>jpaconfiguration</implementation>
			  					</component>
			  				</components>
			  				<componentProperties>
			  					<!-- genera sentencias drop -->
			  					<drop>false</drop>
			  					<!-- genera sentencias create -->
			  					<create>true</create>
			  					<!-- con export=false genera los ddls en el fichero de salida definido -->
			  					<export>false</export>
			  					<!-- formatea las sentencias -->
			  					<format>true</format>
			  					<!-- nombre de la unidad de persistencia definida en el persistence.xml -->
			  					<persistenceunit>Despensa</persistenceunit>
			  					<!-- path al fichero de propiedades donde se localiza bÃ¡sicamente el dialecto de la base de datos -->
			  					<propertyfile>target/test-classes/db.properties</propertyfile>	
			  					<!-- nombre del fichero de salida que tendrÃ¡ las sql generadas -->
			  					<outputfilename>schema-create-test.sql</outputfilename>	
			  				</componentProperties>
			  			</configuration>
			        </execution>
			        <execution>		
	  					<id>GeneraciÃ³n esquema ddl DROP</id>		        	
			            <phase>pre-integration-test</phase>
			            <goals>
			              <goal>hbm2ddl</goal>
			            </goals>
			            <configuration>
			  				<components>
			  					<component>
			  						<name>hbm2ddl</name>
			  						<implementation>jpaconfiguration</implementation>
			  					</component>
			  				</components>
			  				<componentProperties>
			  					<!-- genera sentencias drop -->
			  					<drop>true</drop>
			  					<!-- genera sentencias create -->
			  					<create>false</create>
			  					<!-- con export=false genera los ddls en el fichero de salida definido -->
			  					<export>false</export>
			  					<!-- formatea las sentencias -->
			  					<format>true</format>
			  					<!-- nombre de la unidad de persistencia definida en el persistence.xml -->
			  					<persistenceunit>Despensa</persistenceunit>
			  					<!-- path al fichero de propiedades donde se localiza bÃ¡sicamente el dialecto de la base de datos -->
			  					<propertyfile>target/test-classes/db.properties</propertyfile>	
			  					<!-- nombre del fichero de salida que tendrÃ¡ las sql generadas -->
			  					<outputfilename>schema-drop-test.sql</outputfilename>	
			  				</componentProperties>
			  			</configuration>
			        </execution>  		        
	  			</executions>  		  			
	  			<dependencies>
	  				<dependency>
	    				<groupId>org.slf4j</groupId>
	    				<artifactId>slf4j-api</artifactId>
	    				<version>${slf4j.version}</version>		
	    			</dependency>
	    			<dependency>
	    				<groupId>org.slf4j</groupId>
	    				<artifactId>slf4j-simple</artifactId>
	    				<version>${slf4j.version}</version>		
	    			</dependency>  				
	  				<dependency>
	  					<groupId>org.icabanas.despensa</groupId>
	  					<artifactId>despensa-vivienda-modelo</artifactId>
	  					<version>1.0-SNAPSHOT</version> 
	  				</dependency>
	  			</dependencies>	
	  		</plugin>
	  		
	  		<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>Borra la base de datos de integraciÃ³n si estuviera</id>
						<phase>pre-integration-test</phase>		
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>target/hibernate3/sql/schema-drop-test.sql</srcFile>
							</srcFiles>	
							<onError>continue</onError>
						</configuration>			
					</execution>
					<execution>
						<id>CreaciÃ³n base de datos de integraciÃ³n</id>
						<phase>pre-integration-test</phase>		
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>						
							<srcFiles>
								<srcFile>target/hibernate3/sql/schema-create-test.sql</srcFile>
							</srcFiles>	
						</configuration>			
					</execution>								
					<execution>
						<id>Para la base de datos HSQLDB</id>
						<phase>post-integration-test</phase>		
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<sqlCommand>SHUTDOWN</sqlCommand>	
						</configuration>			
					</execution>
				</executions>
				<configuration>
					<driver>${db.driverClassName}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
				</configuration>			
				<dependencies>
					<dependency>
						<groupId>hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<executions>
					<execution>
						<id>PreparaciÃ³n de base de la datos</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<driver>${db.driverClassName}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
					<type>CLEAN_INSERT</type>
					<src>src/test/data/datos.xml</src>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
			</plugin>	
			<!-- 
	      	<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>exec-maven-plugin</artifactId>
			    <version>1.2.1</version>
			    <executions>
			        <execution>
			        	<id>Arrancando base de datos</id>
			        	<phase>pre-integration-test</phase>
			            <goals>
			                <goal>java</goal>
			            </goals>		            
			            <configuration>		            	
					        <mainClass>org.hsqldb.Server</mainClass>
					        <arguments>
					            <argument>database.0</argument>
					            <argument>file:target/monitoring</argument>
					        </arguments>
					    </configuration>
			        </execution>
			        <execution>
			        	<id>Parando base de datos</id>
			        	<phase>post-integration-test</phase>
			            <goals>
			                <goal>java</goal>
			            </goals>
			            <configuration>		            	
			            	<includePluginDependencies>true</includePluginDependencies>
					        <mainClass>org.hsqldb.Server</mainClass>
					        <arguments>
					            <argument>database.0</argument>
					            <argument>file:target/monitoring</argument>
					        </arguments>
					    </configuration>
			        </execution>
			    </executions>
			    <dependencies>
			    	<dependency> 
	                  <groupId>hsqldb</groupId> 
	                  <artifactId>hsqldb</artifactId> 
	                  <version>${hsqldb.version}</version>                   
	         		</dependency>
			    </dependencies>
			</plugin>				
	  		 -->
	      <plugin>
		  	<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>${jetty.version}</version>
			<executions>
				<execution>
		            <id>Arrancando aplicaciÃ³n</id>
		            <phase>pre-integration-test</phase>
		            <goals>
		              <goal>deploy-war</goal>
		            </goals>
		            <inherited>false</inherited>	          
	          </execution>
	          <execution>
	            <id>Parando aplicaciÃ³n</id>
	            <phase>post-integration-test</phase>
	            <goals>
	              <goal>stop</goal>
	            </goals>
	            <inherited>false</inherited>
	          </execution>
			</executions>
			<configuration>
				<daemon>true</daemon>
				<connectors>
					<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
						<port>${web.port}</port>
					</connector>
				</connectors>
			    <scanIntervalSeconds>10</scanIntervalSeconds>
				<reload>automatic</reload>
				<stopKey>foo</stopKey>
				<stopPort>9090</stopPort>
				<webAppConfig>
					<contextPath>${web.context}</contextPath>
					<sessionHandler implementation="org.eclipse.jetty.server.session.SessionHandler">
						<sessionManager implementation="org.eclipse.jetty.server.session.HashSessionManager">
							<storeDirectory>${basedir}/target/sessions</storeDirectory>
						</sessionManager>
					</sessionHandler>
				</webAppConfig>
				<!-- 
				<systemproperties>
					<systemproperty>
						<name>log4j.configuration</name>
						<value>file:${project.basedir}/target/classes/log4j.xml</value>
					</systemproperty>
				</systemproperties>
				 -->
				<scanTargetPatterns>
					<scanTargetPattern>                            
						<directory>src/main/webapp/WEB-INF</directory>
						<includes>
							<include>**/*.xml</include>
						</includes>
					</scanTargetPattern>
					<scanTargetPattern>
						<directory>src/main/java</directory>
						<excludes>
							<exclude>**/*.java</exclude>
						</excludes>
					</scanTargetPattern>
					<!-- <scanTargetPattern>
						<directory>src/main/resources</directory>
						<includes>
							<include>**/*.xml</include>
						</includes>
					</scanTargetPattern> -->
				</scanTargetPatterns>
			</configuration>
			<!-- 
				<dependencies>
					<dependency>
	    				<groupId>org.mortbay.jetty</groupId>
					    <artifactId>jsp-2.1-glassfish</artifactId>
					    <version>9.1.1.B60.25.p2</version>
					</dependency>
					<dependency>
						<groupId>org.apache.tomcat</groupId>
						<artifactId>el-api</artifactId>
						<version>${tomcat-el.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.tomcat</groupId>
						<artifactId>jasper-el</artifactId>
						<version>${tomcat-el.version}</version>
					</dependency>
				</dependencies>
			 -->
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<path>${web.context}</path>
					<port>${web.port}</port>
				</configuration>
		</plugin>
      	</plugins>      	
      </build>
    </profile>
    
  	<profile>
      <id>testing-jetty-hsqldb</id>
      <build>
      	<plugins>       		
	  		
      		<plugin>
	  			<groupId>org.codehaus.mojo</groupId>
	  			<artifactId>hibernate3-maven-plugin</artifactId>
	  			<version>2.2</version>
	  			<executions>
	  				<execution>		
	  					<id>GeneraciÃ³n esquema ddl CREATE</id>		        	
			            <phase>process-test-resources</phase>
			            <goals>
			              <goal>hbm2ddl</goal>
			            </goals>
			            <configuration>
			  				<components>
			  					<component>
			  						<name>hbm2ddl</name>
			  						<implementation>jpaconfiguration</implementation>
			  					</component>
			  				</components>
			  				<componentProperties>
			  					<!-- genera sentencias drop -->
			  					<drop>false</drop>
			  					<!-- genera sentencias create -->
			  					<create>true</create>
			  					<!-- con export=false genera los ddls en el fichero de salida definido -->
			  					<export>false</export>
			  					<!-- formatea las sentencias -->
			  					<format>true</format>
			  					<!-- nombre de la unidad de persistencia definida en el persistence.xml -->
			  					<persistenceunit>Despensa</persistenceunit>
			  					<!-- path al fichero de propiedades donde se localiza bÃ¡sicamente el dialecto de la base de datos -->
			  					<propertyfile>target/test-classes/db.properties</propertyfile>	
			  					<!-- nombre del fichero de salida que tendrÃ¡ las sql generadas -->
			  					<outputfilename>schema-create-test.sql</outputfilename>	
			  				</componentProperties>
			  			</configuration>
			        </execution>
			        <execution>		
	  					<id>GeneraciÃ³n esquema ddl DROP</id>		        	
			            <phase>process-test-resources</phase>
			            <goals>
			              <goal>hbm2ddl</goal>
			            </goals>
			            <configuration>
			  				<components>
			  					<component>
			  						<name>hbm2ddl</name>
			  						<implementation>jpaconfiguration</implementation>
			  					</component>
			  				</components>
			  				<componentProperties>
			  					<!-- genera sentencias drop -->
			  					<drop>true</drop>
			  					<!-- genera sentencias create -->
			  					<create>false</create>
			  					<!-- con export=false genera los ddls en el fichero de salida definido -->
			  					<export>false</export>
			  					<!-- formatea las sentencias -->
			  					<format>true</format>
			  					<!-- nombre de la unidad de persistencia definida en el persistence.xml -->
			  					<persistenceunit>Despensa</persistenceunit>
			  					<!-- path al fichero de propiedades donde se localiza bÃ¡sicamente el dialecto de la base de datos -->
			  					<propertyfile>target/test-classes/db.properties</propertyfile>	
			  					<!-- nombre del fichero de salida que tendrÃ¡ las sql generadas -->
			  					<outputfilename>schema-drop-test.sql</outputfilename>	
			  				</componentProperties>
			  			</configuration>
			        </execution>  		        
	  			</executions>  		  			
	  			<dependencies>
	  				<dependency>
	    				<groupId>org.slf4j</groupId>
	    				<artifactId>slf4j-api</artifactId>
	    				<version>${slf4j.version}</version>		
	    			</dependency>
	    			<dependency>
	    				<groupId>org.slf4j</groupId>
	    				<artifactId>slf4j-simple</artifactId>
	    				<version>${slf4j.version}</version>		
	    			</dependency>  				
	  				<dependency>
	  					<groupId>org.icabanas.despensa</groupId>
	  					<artifactId>despensa-vivienda-modelo</artifactId>
	  					<version>1.0-SNAPSHOT</version> 
	  				</dependency>
	  			</dependencies>	
	  		</plugin>
	  		
	  		<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>Borra la base de datos de integraciÃ³n si estuviera</id>
						<phase>process-test-resources</phase>		
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>target/hibernate3/sql/schema-drop-test.sql</srcFile>
							</srcFiles>	
							<onError>continue</onError>
						</configuration>			
					</execution>
					<execution>
						<id>CreaciÃ³n base de datos de integraciÃ³n</id>
						<phase>process-test-resources</phase>		
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>						
							<srcFiles>
								<srcFile>target/hibernate3/sql/schema-create-test.sql</srcFile>
							</srcFiles>	
						</configuration>			
					</execution>													
				</executions>
				<configuration>
					<driver>${db.driverClassName}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
				</configuration>			
				<dependencies>
					<dependency>
						<groupId>hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<executions>
					<execution>
						<id>PreparaciÃ³n de base de la datos</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<driver>${db.driverClassName}</driver>
					<url>${db.url}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>
					<format>flat</format>
					<type>CLEAN_INSERT</type>
					<src>src/test/data/datos.xml</src>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
			</plugin>	
      	</plugins>      	
      </build>
    </profile>    
  </profiles>
  
</project>